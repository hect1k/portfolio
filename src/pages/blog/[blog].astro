---
import ScreenLayout from "@layouts/Screen.astro";
import { calculateReadingTime, formatDate } from "@utils";
import { getCollection } from "astro:content";
import MarkdownIt from "markdown-it";

const parser = new MarkdownIt();

export async function getStaticPaths() {
  const blogs = await getCollection("blog");
  return [
    ...blogs.map((blog: any) => ({
      params: {
        blog: blog.data.draft ? "/not-found" : blog.slug,
      },
      props: {
        blog: blog,
      },
    })),
  ];
}

const { blog } = Astro.props;
---

<ScreenLayout title={`${blog.data.title} | Blog by Nnisarg Gada`}>
  <div class="scroll-watcher fixed z-20 top-20 left-0 h-1 bg-accent">
  </div>
  <div
    class="w-full max-w-none p-6 md:p-8 lg:p-12 mx-auto prose md:prose-lg lg:prose-xl"
  >
    <h1 class="text-5xl font-bold">{blog.data.title}</h1>
    <h3 class="text-xl">{blog.data.description}</h3>
    <div class="flex flex-wrap gap-2">
      {
        blog.data.tags
          .split(", ")
          .map((tag: string) => (
            <div class="font-bold text-sm bg-accent px-2 py-1 rounded">
              #{tag}
            </div>
          ))
      }
    </div>
    <p>
      <span class="font-bold">{formatDate(blog.data.pubDate)}</span> â€¢ <span
        class="italic">{calculateReadingTime(blog.body)} min read</span
      >
    </p>
    <Fragment set:html={parser.render(blog.body)} />
  </div>
</ScreenLayout>

<style>
  .scroll-watcher {
    --width: 0;
    width: var(--width);
  }
</style>

<script>

  function updateScrollWatcher() {
    const { scrollTop, scrollHeight } = document.documentElement;
    const scrollPercent = `${scrollTop / (scrollHeight - window.innerHeight) * 100}%`;
    document.querySelector(".scroll-watcher").style.setProperty("--width", scrollPercent);
  }

  window.addEventListener("scroll", updateScrollWatcher);
</script>
