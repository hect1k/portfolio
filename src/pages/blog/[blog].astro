---
import ScreenLayout from "@layouts/Screen.astro";
import Breadcrumbs from "@components/Breadcrumbs.astro";
import { calculateReadingTime, formatDate } from "@utils";
import { getCollection } from "astro:content";
import MarkdownIt from "markdown-it";
import BlogCard from "@components/BlogCard.astro";

import recommendations from "../../recommendations.json";

const blogs = await getCollection("blog");

const topRecommendSlugs = recommendations
  .filter((rec: any) => rec.slug == Astro.params.blog)
  .map((rec: any) => rec.recommendations)
  .flat()
  .slice(0, 3);

var recommendedBlogs: any = [];

topRecommendSlugs.forEach((slug: string) => {
  var blog = blogs.find((b: any) => b.slug == slug);
  if (blog) {
    recommendedBlogs.push(blog);
  }
});

const parser = new MarkdownIt();

export async function getStaticPaths() {
  const blogs = await getCollection("blog");
  return [
    ...blogs.map((blog: any) => ({
      params: {
        blog: blog.data.draft ? "/not-found" : blog.slug,
      },
      props: {
        blog: blog,
      },
    })),
  ];
}

const { blog } = Astro.props;
---

<ScreenLayout
  title={`${blog.data.title} | Blog Post by Nnisarg Gada`}
  description={blog.data.description}
  image={`https://nnisarg.in${blog.data.image}`}
>
  <div
    class="fade prose mx-auto w-full max-w-none p-6 md:prose-lg lg:prose-xl md:p-8 lg:p-12"
  >
    <div class="my-4 md:my-8 lg:my-12">
      <Breadcrumbs blog={blog.data.title} />
    </div>
    <div class="blog-content">
      <h1 class="text-4xl font-bold">{blog.data.title}</h1>
      <h3 class="text-xl">{blog.data.description}</h3>
      <div class="flex flex-wrap gap-2">
        {
          blog.data.tags
            .split(", ")
            .map((tag: string) => (
              <div class="rounded bg-accent px-2 py-1 text-sm font-bold">
                #{tag}
              </div>
            ))
        }
      </div>
      <p>
        <span class="font-bold">{formatDate(blog.data.pubDate)}</span> â€¢ <span
          class="italic">{calculateReadingTime(blog.body)} min read</span
        >
      </p>
      <Fragment set:html={parser.render(blog.body)} />
    </div>
  </div>
  <div class="flex flex-col gap-4 p-6 md:gap-8 md:p-8 lg:p-12">
    <div class="flex w-full flex-wrap items-end justify-between gap-2">
      <h2 class="text-3xl font-bold">You May Also Like</h2>
      <a href="/blog" title="View All Blog Posts" class="underline">
        View All</a
      >
    </div>
    <div class="flex flex-col gap-6">
      {
        recommendedBlogs.map(
          (blog: any) => !blog.data.draft && <BlogCard blog={blog} />,
        )
      }
    </div>
  </div>
</ScreenLayout>
